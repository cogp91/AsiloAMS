guardarCambios = new JButton("Guardar Cambios");
		guardarCambios.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent event){

				asiloIdPx = 1;

				String sup = new StringBuilder().append("INSERT INTO ").append("paciente").append(" (sexo,fecha_nacimiento,nombre,apellido,ciudad,calle,codigo_postal,sangre,numero_cuarto,numero_cama,estatus,asilo_id) ").append("VALUES (").append(sexoPx).append(",'").append(fechaNacimientoPx.getText()).append("','").append(nombrePx.getText()).append("','").append(apellidoPx.getText()).append("','").append(ciudadPx.getText()).append("','").append(callePx.getText()).append("',").append(codigoPostalPx.getText()).append(",'").append(sangrePx.getText()).append("',").append(numeroCuartoPx.getText()).append(",").append(numeroCamaPx.getText()).append(",").append(estatusPx).append(",").append(asiloIdPx).append(")").toString();

				System.out.println(sup);

				int proceed = 1;
				System.out.println(nombrePx.getText());

				if (nombrePx.getText().equals("Nombre del paciente") || ciudadPx.getText().equals("Ciudad") || callePx.getText().equals("Calle") || codigoPostalPx.getText().equals("Código Postal") || fechaNacimientoPx.getText().equals("Fecha de nacimiento (yyyy/mm/dd)") || numeroCuartoPx.getText().equals("Cuarto del Paciente") || numeroCamaPx.getText().equals("Cama del paciente") || sexoPx.equals(-1)){
					String warning = "Advertencia, uno o más campos no fueron modificados: (";
					if (nombrePx.getText().equals("Nombre del paciente")){
						warning += "Nombre del paciente, ";
					}

					if (ciudadPx.getText().equals("Ciudad")){
						warning += "Ciudad, ";
					}

					if (callePx.getText().equals("Calle")){
						warning += "Calle, ";
					}

					if (codigoPostalPx.getText().equals("Código Postal")){
						codigoPostalPx.setText("000000");
						warning += "Código Postal, ";
					}

					if (fechaNacimientoPx.getText().equals("Fecha de nacimiento (yyyy/mm/dd)")){
						fechaNacimientoPx.setText("1970/01/01");
						warning += "Fecha de nacimiento (yyyy/mm/dd), ";
					}

					if (sangrePx.getText().equals("Tipo de sangre del paciente")){
						sangrePx.setText("X");
						warning += "Fecha de nacimiento (yyyy/mm/dd), ";
					}

					if (numeroCuartoPx.getText().equals("Cuarto del Paciente")){
						numeroCuartoPx.setText("-1");
						warning += "Cuarto del Paciente, ";
					}

					if (numeroCamaPx.getText().equals("Cama del paciente")){
						numeroCamaPx.setText("-1");
						warning += "Cama del paciente, ";
					}

					if (sexoPx.equals(-1)){
						warning += "Sexo";
					}

					warning += ") ¿Quiere proceder?";
					if (JOptionPane.showConfirmDialog(null, warning, "Información posiblemente incompleta",
							JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
						proceed = 1;
					} else {
						proceed = 0;
					}
					System.out.println("Proceed: " + proceed);
				}

				if(proceed == 1){
					try {
						Class.forName("com.mysql.jdbc.Driver");

						String mySQLTable = "paciente";

						String sql =
							"INSERT INTO "
							+ mySQLTable
							+ "(sexo,fecha_nacimiento,nombre,apellido,ciudad,calle,codigo_postal,sangre,numero_cuarto,numero_cama,estatus,asilo_id) "
							+ "VALUES ("
								+ sexoPx + ",'"
								+ fechaNacimientoPx.getText() + "','"
								+ nombrePx.getText() + "','"
								+ apellidoPx.getText()  + "','"
								+ ciudadPx.getText()  + "','"
								+ callePx.getText()  + "',"
								+ codigoPostalPx.getText() + ",'"
								+ sangrePx.getText() + "',"
								+ numeroCuartoPx.getText() + ","
								+ numeroCamaPx.getText() + ","
								+ estatusPx + ","
								+ asiloIdPx + ")";

						System.out.println(sql);

						//Get connection with MySQL database
						Connection mycon = DriverManager.getConnection("jdbc:mysql://localhost:3306/sistema_asilo?useSSL=false",
								"root", "1212");
						Statement myStmt = mycon.createStatement();
						//Adds the new score to the database

						myStmt.executeUpdate(sql);

						//Execute SQL query
						ResultSet myRs = myStmt.executeQuery("SELECT * from " + mySQLTable);
						ResultSetMetaData rsmd = myRs.getMetaData();
						int columnsNumber = rsmd.getColumnCount();

						while (myRs.next()) {
							System.out.println(myRs.getString(4)); //gets the first column's rows.
						}

						System.out.print(myRs);
					} catch (Exception e) {
						System.out.println("Error with database connection");
						e.printStackTrace();
					}
				} else {
					numeroCamaPx.setText("Cama del paciente");
					numeroCuartoPx.setText("Cuarto del Paciente");
					codigoPostalPx.setText("Código Postal");
					fechaNacimientoPx.setText("Fecha de nacimiento (yyyy/mm/dd)");
					sangrePx.setText("Tipo de sangre del paciente");
				}
			}
		});